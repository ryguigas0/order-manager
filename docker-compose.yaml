services:
  app:
    build:
      context: .
      dockerfile: app.Dockerfile
    ports:
      - '${PORT}:${PORT}'
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_healthy

  rabbitmq:
    build:
      context: .
      dockerfile: rabbitmq.Dockerfile
    ports:
      - '${RMQ_PORT}:${RMQ_PORT}'
      - '15672:15672'
    env_file:
      - .env
    environment:
      RABBITMQ_DEFAULT_USER: ${RMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RMQ_PASS}
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', 'check_port_connectivity']
      interval: 10s
      timeout: 5s
      retries: 2
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  mongo:
    build:
      context: .
      dockerfile: mongodb.Dockerfile
    ports:
      - '${MONGO_PORT}:${MONGO_PORT}'
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 2

volumes:
  mongo-data:
  rabbitmq-data:
